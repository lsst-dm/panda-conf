---
apiVersion: batch/v1
kind: Job
metadata:
  name: grid-job
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      tolerations:
        - key: "cloud.google.com/gke-preemptible"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
#        - name: rubin-grid-centos7
#          image: us.gcr.io/panda-dev-1a74/centos:middleware_v4
#        - name: osg-centos7-docker
#          image: us.gcr.io/panda-dev-1a74/osg-wn:CentOS7-gcr_auth-Docker
        - name: osg-centos7-gar
          image: us-central1-docker.pkg.dev/panda-dev-1a74/pilot/centos:CentOS7-gar_auth
          resources:
            requests:
                cpu: "850m"
                memory: "3200Mi"
            limits:
                cpu: "1000m"
                memory: "3200Mi"
          securityContext:
            privileged: true
            runAsUser: 0
          env:
            - name: computingSite
              value: "$computingSite"
            - name: pandaQueueName
              value: "$pandaQueueName"
            - name: proxySecretPath
              value: "$proxySecretPath"
            - name: proxyContent
              value: "$proxyContent"
            - name: workerID
              value: "$workerID"
            - name: logs_frontend_w
              value: "$logs_frontend_w"
            - name: logs_frontend_r
              value: "$logs_frontend_r"
            - name: resourceType
              value: "$resourceType"
            - name: HARVESTER_WORKER_ID
              value: "$HARVESTER_WORKER_ID"
            - name: HARVESTER_ID
              value: "$HARVESTER_ID"
            - name: PANDA_JSID
              value: "$PANDA_JSID"
            - name: TMPDIR
              value: "/tmp"
            - name: PILOT_NOKILL
              value: "True"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /gcscreds/gcs-access.json
            - name: S3_ENDPOINT_URL
              value: "https://storage.googleapis.com"
            - name: REALTIME_LOGGING_SERVER
              value: "google-cloud-logging"
            - name: REALTIME_LOGNAME
              value: "Panda-RubinLog"
            - name: REALTIME_LOGFILES
              value: "payload-log.json"
            - name: USE_REALTIME_LOGGING
              value: "yes"
          command: ["/usr/bin/bash"]
 #         args: ["-c", "cd /tmp;export ALRB_noGridMW=NO; wget https://storage.googleapis.com/drp-us-central1-containers/pilots_starter-prmon.py -O pilots_starter.py; chmod 755 ./pilots_starter.py; ./pilots_starter.py || true;docker system prune -a -f;"]
#          args: ["-c", "cd /tmp; docker-credential-gcr config --token-source=env; export ALRB_noGridMW=NO; wget https://storage.googleapis.com/drp-us-central1-containers/pilots_starter-prmon.py -O pilots_starter.py; chmod 755 ./pilots_starter.py; ./pilots_starter.py || true;docker system prune -a -f;"]
          args: ["-c", "docker-credential-gcr config --token-source=env; cd /tmp; wget https://storage.googleapis.com/drp-us-central1-containers/pilot3_starter.py -O pilots_starter.py; python3 ./pilots_starter.py || true;docker system prune -a -f;"]
          volumeMounts:
            - name: proxy-secret
              mountPath: /proxy
            - name: docker-daemon
              mountPath: /var/run/docker.sock  
            - name: gcs-credvol
              mountPath: "/gcscreds"
              readOnly: true
            - name: credentialsmnt
              mountPath: "/credentials"
              readOnly: true
            - name: temp-volume
              mountPath: /tmp/panda
          livenessProbe:
            exec:
              command:  # returns 0 if log changed less than 10 min ago, otherwise 1
              - /bin/sh
              - -c
              - find /tmp/wrapper-wid.log -mmin -10 | egrep '.*'
            initialDelaySeconds: 300
            periodSeconds: 300
            failureThreshold: 5
      volumes:
        - name: proxy-secret
          secret:
              secretName: proxy-secret
        - name: credentialsmnt
          secret:
              secretName: credentials
        - name: docker-daemon
          hostPath: 
                 path: /var/run/docker.sock
                 type: Socket
        - name: gcs-credvol
          secret:
              secretName: gcs-access
              items:
              - key: jsonFile
                path: gcs-access.json
        - name: temp-volume
          hostPath:
              path: /tmp/panda
              type: DirectoryOrCreate

